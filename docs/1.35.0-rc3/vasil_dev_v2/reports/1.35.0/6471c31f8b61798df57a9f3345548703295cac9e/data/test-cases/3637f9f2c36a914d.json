{
  "uid" : "3637f9f2c36a914d",
  "name" : "test_txout_token_locking[plutus_v1]",
  "fullName" : "cardano_node_tests.tests.test_plutus_spend_build.TestBuildLocking#test_txout_token_locking",
  "historyId" : "49fff06ea02fdaf1657a30d806383106",
  "time" : {
    "start" : 1655374053667,
    "stop" : 1655374176838,
    "duration" : 123171
  },
  "description" : "Test locking a Tx output with a Plutus script and spending the locked UTxO.\n\n        Uses `cardano-cli transaction build` command for building the transactions.\n\n        * create a Tx output that contains native tokens with a datum hash at the script address\n        * check that expected amounts of Lovelace and native tokens were locked at the script\n          address\n        * spend the locked UTxO\n        * check that the expected amounts of Lovelace and native tokens were spent\n        * check expected fees\n        * check expected Plutus cost\n        * (optional) check transactions in db-sync\n        ",
  "descriptionHtml" : "<p>Test locking a Tx output with a Plutus script and spending the locked UTxO.</p>\n<pre><code>    Uses `cardano-cli transaction build` command for building the transactions.\n\n    * create a Tx output that contains native tokens with a datum hash at the script address\n    * check that expected amounts of Lovelace and native tokens were locked at the script\n      address\n    * spend the locked UTxO\n    * check that the expected amounts of Lovelace and native tokens were spent\n    * check expected fees\n    * check expected Plutus cost\n    * (optional) check transactions in db-sync\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: time: 368100 vs 476468",
  "statusTrace" : "self = <cardano_node_tests.tests.test_plutus_spend_build.TestBuildLocking object at 0x7f2c38a599c0>, cluster = <ClusterLib: protocol=cardano, tx_era=babbage>\npayment_addrs = [AddressRecord(address='addr_test1vze2pgn0jvqy4mmpxjm3x85vu2dgd2h8yhdnjxfr6eglpzs85c7q4', vkey_file=PosixPath('test_tx...en_locking_ci0_krh_payment_addr_1.vkey'), skey_file=PosixPath('test_txout_token_locking_ci0_krh_payment_addr_1.skey'))], plutus_version = 'v1'\n\n    @allure.link(helpers.get_vcs_link())\n    @pytest.mark.dbsync\n    @pytest.mark.testnets\n    @param_plutus_version\n    def test_txout_token_locking(\n        self,\n        cluster: clusterlib.ClusterLib,\n        payment_addrs: List[clusterlib.AddressRecord],\n        plutus_version: str,\n    ):\n        \"\"\"Test locking a Tx output with a Plutus script and spending the locked UTxO.\n    \n        Uses `cardano-cli transaction build` command for building the transactions.\n    \n        * create a Tx output that contains native tokens with a datum hash at the script address\n        * check that expected amounts of Lovelace and native tokens were locked at the script\n          address\n        * spend the locked UTxO\n        * check that the expected amounts of Lovelace and native tokens were spent\n        * check expected fees\n        * check expected Plutus cost\n        * (optional) check transactions in db-sync\n        \"\"\"\n        temp_template = f\"{common.get_test_id(cluster)}_{plutus_version}\"\n        token_rand = clusterlib.get_rand_str(5)\n    \n        plutus_op = plutus_common.PlutusOp(\n            script_file=plutus_common.ALWAYS_SUCCEEDS[plutus_version].script_file,\n            datum_file=plutus_common.DATUM_42_TYPED,\n            redeemer_file=plutus_common.REDEEMER_42_TYPED,\n            execution_cost=plutus_common.ALWAYS_SUCCEEDS[plutus_version].execution_cost,\n        )\n    \n        tokens = clusterlib_utils.new_tokens(\n            *[f\"qacoin{token_rand}{i}\".encode(\"utf-8\").hex() for i in range(5)],\n            cluster_obj=cluster,\n            temp_template=f\"{temp_template}_{token_rand}\",\n            token_mint_addr=payment_addrs[0],\n            issuer_addr=payment_addrs[0],\n            amount=100,\n        )\n        tokens_rec = [plutus_common.Token(coin=t.token, amount=t.amount) for t in tokens]\n    \n        script_utxos, collateral_utxos, tx_output_fund = _build_fund_script(\n            temp_template=temp_template,\n            cluster_obj=cluster,\n            payment_addr=payment_addrs[0],\n            dst_addr=payment_addrs[1],\n            plutus_op=plutus_op,\n            tokens=tokens_rec,\n        )\n    \n        __, tx_output_spend, plutus_cost = _build_spend_locked_txin(\n            temp_template=temp_template,\n            cluster_obj=cluster,\n            payment_addr=payment_addrs[0],\n            dst_addr=payment_addrs[1],\n            script_utxos=script_utxos,\n            collateral_utxos=collateral_utxos,\n            plutus_op=plutus_op,\n            amount=2_000_000,\n            tokens=tokens_rec,\n        )\n    \n        # check expected fees\n        expected_fee_fund = 173_597\n        assert helpers.is_in_interval(tx_output_fund.fee, expected_fee_fund, frac=0.15)\n    \n        expected_fee = 175_710\n        assert tx_output_spend and helpers.is_in_interval(\n            tx_output_spend.fee, expected_fee, frac=0.15\n        )\n    \n>       plutus_common.check_plutus_cost(\n            plutus_cost=plutus_cost,\n            expected_cost=[plutus_common.ALWAYS_SUCCEEDS[plutus_version].execution_cost],\n        )\n\n/home/martink/Source/repos/cardano-node-tests1/cardano_node_tests/tests/test_plutus_spend_build.py:1162: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nplutus_cost = [{'executionUnits': {'memory': 1700, 'steps': 368100}, 'lovelaceCost': 125, 'scriptHash': '67f33146617a5e61936081db3b2117cbf59bd2123748f58ac9678656'}], expected_cost = [ExecutionCost(per_time=476468, per_space=1700, fixed_cost=133)]\n\n    def check_plutus_cost(plutus_cost: List[dict], expected_cost: List[ExecutionCost]):\n        \"\"\"Check plutus transaction cost.\n    \n        units: the time is in picoseconds and the space is in bytes.\n        \"\"\"\n        # sort records by total cost\n        sorted_plutus = sorted(\n            plutus_cost,\n            key=lambda x: x[\"executionUnits\"][\"memory\"]  # type: ignore\n            + x[\"executionUnits\"][\"steps\"]\n            + x[\"lovelaceCost\"],\n        )\n        sorted_expected = sorted(expected_cost, key=lambda x: x.per_space + x.per_time + x.fixed_cost)\n    \n        errors = []\n        for costs, expected_values in zip(sorted_plutus, sorted_expected):\n            tx_time = costs[\"executionUnits\"][\"steps\"]\n            tx_space = costs[\"executionUnits\"][\"memory\"]\n            lovelace_cost = costs[\"lovelaceCost\"]\n    \n            if not helpers.is_in_interval(tx_time, expected_values.per_time, frac=0.15):\n                errors.append(f\"time: {tx_time} vs {expected_values.per_time}\")\n            if not helpers.is_in_interval(tx_space, expected_values.per_space, frac=0.15):\n                errors.append(f\"space: {tx_space} vs {expected_values.per_space}\")\n            if not helpers.is_in_interval(lovelace_cost, expected_values.fixed_cost, frac=0.15):\n                errors.append(f\"fixed cost: {lovelace_cost} vs {expected_values.fixed_cost}\")\n    \n        if errors:\n>           raise AssertionError(\"\\n\".join(errors))\nE           AssertionError: time: 368100 vs 476468\n\n/home/martink/Source/repos/cardano-node-tests1/cardano_node_tests/tests/plutus_common.py:162: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "tmp_path_factory",
    "time" : {
      "start" : 1655369880144,
      "stop" : 1655369880144,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "function_autouse",
    "time" : {
      "start" : 1655373825271,
      "stop" : 1655373825271,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cd_testfile_temp_dir",
    "time" : {
      "start" : 1655373825271,
      "stop" : 1655373825271,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "worker_id",
    "time" : {
      "start" : 1655369880145,
      "stop" : 1655369880146,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster_manager",
    "time" : {
      "start" : 1655373825271,
      "stop" : 1655373825271,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "close_dbconn",
    "time" : {
      "start" : 1655369880145,
      "stop" : 1655369880145,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster",
    "time" : {
      "start" : 1655373825271,
      "stop" : 1655373825525,
      "duration" : 254
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testfile_temp_dir",
    "time" : {
      "start" : 1655373004951,
      "stop" : 1655373004951,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testenv_setup_teardown",
    "time" : {
      "start" : 1655369880146,
      "stop" : 1655369880196,
      "duration" : 50
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "change_dir",
    "time" : {
      "start" : 1655369880144,
      "stop" : 1655369880145,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "session_autouse",
    "time" : {
      "start" : 1655369880196,
      "stop" : 1655369880197,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "payment_addrs",
    "time" : {
      "start" : 1655373825526,
      "stop" : 1655374053666,
      "duration" : 228140
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "cd_testfile_temp_dir::0",
    "time" : {
      "start" : 1655374176902,
      "stop" : 1655374176902,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster_manager::0",
    "time" : {
      "start" : 1655374176901,
      "stop" : 1655374176902,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "close_dbconn::0",
    "time" : {
      "start" : 1655382172993,
      "stop" : 1655382172993,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testenv_setup_teardown::0",
    "time" : {
      "start" : 1655382172991,
      "stop" : 1655382172992,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "testnets"
  }, {
    "name" : "tag",
    "value" : "dbsync"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.skipif(False, reason='runs only with Alonzo+ TX')"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "cardano_node_tests.tests"
  }, {
    "name" : "suite",
    "value" : "test_plutus_spend_build"
  }, {
    "name" : "subSuite",
    "value" : "TestBuildLocking"
  }, {
    "name" : "host",
    "value" : "bender-3900x"
  }, {
    "name" : "thread",
    "value" : "868881-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cardano_node_tests.tests.test_plutus_spend_build"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "plutus_version",
    "value" : "'v1'"
  } ],
  "links" : [ {
    "name" : "https://github.com/input-output-hk/cardano-node-tests/blob/226d3f30ecdb15f2868842956c7979f6179e24a9/cardano_node_tests/tests/test_plutus_spend_build.py#L1089",
    "url" : "https://github.com/input-output-hk/cardano-node-tests/blob/226d3f30ecdb15f2868842956c7979f6179e24a9/cardano_node_tests/tests/test_plutus_spend_build.py#L1089",
    "type" : "link"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "e809fff3f05d4c8c",
      "status" : "skipped",
      "statusDetails" : "Skipped: collected, not run",
      "time" : {
        "start" : 1655369876221,
        "stop" : 1655369876221,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.skipif(False, reason='runs only with Alonzo+ TX')", "dbsync", "smoke", "testnets" ]
  },
  "source" : "3637f9f2c36a914d.json",
  "parameterValues" : [ "'v1'" ]
}