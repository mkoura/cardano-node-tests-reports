{
  "uid" : "8a58c8caf8318f73",
  "name" : "test_protocol_state_keys",
  "fullName" : "cardano_node_tests.tests.test_protocol.TestProtocol#test_protocol_state_keys",
  "historyId" : "c599567004bb6f70e9e1f25723edd654",
  "time" : {
    "start" : 1658624604139,
    "stop" : 1658624604152,
    "duration" : 13
  },
  "description" : "Check output of `query protocol-state`.",
  "descriptionHtml" : "<p>Check output of <code>query protocol-state</code>.</p>\n",
  "status" : "skipped",
  "statusMessage" : "XFAIL reason: `query protocol-state` is currently broken - see node issue #3883\n\n_pytest.outcomes.XFailed: `query protocol-state` is currently broken - see node issue #3883",
  "statusTrace" : "self = <cardano_node_tests.tests.test_protocol.TestProtocol object at 0x7fae0fed0040>, cluster = <ClusterLib: protocol=cardano, tx_era=babbage>\n\n    @allure.link(helpers.get_vcs_link())\n    def test_protocol_state_keys(self, cluster: clusterlib.ClusterLib):\n        \"\"\"Check output of `query protocol-state`.\"\"\"\n        temp_template = common.get_test_id(cluster)\n    \n        # The query dumps CBOR instead of JSON in some circumstances. We'll save the output\n        # for later.\n        try:\n>           protocol_state_raw = cluster.query_cli([\"protocol-state\"])\n\n/home/martink/Source/repos/cardano-node-tests5/cardano_node_tests/tests/test_protocol.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <ClusterLib: protocol=cardano, tx_era=babbage>, cli_args = ['protocol-state']\n\n    def query_cli(self, cli_args: UnpackableSequence) -> str:\n        \"\"\"Run the `cardano-cli query` command.\"\"\"\n>       stdout = self.cli(\n            [\n                \"query\",\n                *cli_args,\n                *self.magic_args,\n                f\"--{self.protocol}-mode\",\n            ]\n        ).stdout\n\n/home/martink/Source/repos/cardano-clusterlib/cardano_clusterlib/clusterlib_klass.py:201: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <ClusterLib: protocol=cardano, tx_era=babbage>, cli_args = ['query', 'protocol-state', '--testnet-magic', '42', '--cardano-mode']\n\n    def cli(self, cli_args: List[str]) -> structs.CLIOut:\n        \"\"\"Run the `cardano-cli` command.\n    \n        Args:\n            cli_args: A list of arguments for cardano-cli.\n    \n        Returns:\n            structs.CLIOut: A tuple containing command stdout and stderr.\n        \"\"\"\n        cmd = [\"cardano-cli\", *cli_args]\n        coverage.record_cli_coverage(cli_args=cmd, coverage_dict=self.cli_coverage)\n>       return self.cli_base(cmd)\n\n/home/martink/Source/repos/cardano-clusterlib/cardano_clusterlib/clusterlib_klass.py:197: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <ClusterLib: protocol=cardano, tx_era=babbage>, cli_args = ['cardano-cli', 'query', 'protocol-state', '--testnet-magic', '42', '--cardano-mode']\n\n    def cli_base(self, cli_args: List[str]) -> structs.CLIOut:\n        \"\"\"Run a command.\n    \n        Args:\n            cli_args: A list consisting of command and it's arguments.\n    \n        Returns:\n            structs.CLIOut: A tuple containing command stdout and stderr.\n        \"\"\"\n        cmd_str = \" \".join(cli_args)\n        LOGGER.debug(\"Running `%s`\", cmd_str)\n        clusterlib_helpers._write_cli_log(clusterlib_obj=self, command=cmd_str)\n    \n        # re-run the command when running into\n        # Network.Socket.connect: <socket: X>: resource exhausted (Resource temporarily unavailable)\n        # or\n        # MuxError (MuxIOException writev: resource vanished (Broken pipe)) \"(sendAll errored)\"\n        for __ in range(3):\n            with subprocess.Popen(cli_args, stdout=subprocess.PIPE, stderr=subprocess.PIPE) as p:\n                stdout, stderr = p.communicate()\n    \n                if p.returncode == 0:\n                    break\n    \n            stderr_dec = stderr.decode()\n            err_msg = (\n                f\"An error occurred running a CLI command `{cmd_str}` on path \"\n                f\"`{Path.cwd()}`: {stderr_dec}\"\n            )\n            if \"resource exhausted\" in stderr_dec or \"resource vanished\" in stderr_dec:\n                LOGGER.error(err_msg)\n                time.sleep(0.4)\n                continue\n>           raise exceptions.CLIError(err_msg)\nE           cardano_clusterlib.exceptions.CLIError: An error occurred running a CLI command `cardano-cli query protocol-state --testnet-magic 42 --cardano-mode` on path `/home/martink/Source/repos/cardano-node-tests5/tmp/pytest-of-martink/pytest-30/popen-gw2/test_protocol_py`: \nE           cardano-cli: FatalError {fatalErrorMessage = \"currentlyBroken: runQueryProtocolState writeProtocolState mOutFile result\"}\n\n/home/martink/Source/repos/cardano-clusterlib/cardano_clusterlib/clusterlib_klass.py:180: CLIError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <cardano_node_tests.tests.test_protocol.TestProtocol object at 0x7fae0fed0040>, cluster = <ClusterLib: protocol=cardano, tx_era=babbage>\n\n    @allure.link(helpers.get_vcs_link())\n    def test_protocol_state_keys(self, cluster: clusterlib.ClusterLib):\n        \"\"\"Check output of `query protocol-state`.\"\"\"\n        temp_template = common.get_test_id(cluster)\n    \n        # The query dumps CBOR instead of JSON in some circumstances. We'll save the output\n        # for later.\n        try:\n            protocol_state_raw = cluster.query_cli([\"protocol-state\"])\n        except clusterlib.CLIError as err:\n            # TODO: the query is broken on 1.35.0-rc4\n            if \"currentlyBroken\" in str(err):\n>               pytest.xfail(\"`query protocol-state` is currently broken - see node issue #3883\")\nE               _pytest.outcomes.XFailed: `query protocol-state` is currently broken - see node issue #3883\n\n/home/martink/Source/repos/cardano-node-tests5/cardano_node_tests/tests/test_protocol.py:81: XFailed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "worker_id",
    "time" : {
      "start" : 1658621921113,
      "stop" : 1658621921113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "session_autouse",
    "time" : {
      "start" : 1658621921365,
      "stop" : 1658621921365,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster",
    "time" : {
      "start" : 1658624603836,
      "stop" : 1658624604139,
      "duration" : 303
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "function_autouse",
    "time" : {
      "start" : 1658624603836,
      "stop" : 1658624603836,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cd_testfile_temp_dir",
    "time" : {
      "start" : 1658624603836,
      "stop" : 1658624603836,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "change_dir",
    "time" : {
      "start" : 1658621921112,
      "stop" : 1658621921113,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "close_dbconn",
    "time" : {
      "start" : 1658621921113,
      "stop" : 1658621921113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testfile_temp_dir",
    "time" : {
      "start" : 1658624603836,
      "stop" : 1658624603836,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "tmp_path_factory",
    "time" : {
      "start" : 1658621921112,
      "stop" : 1658621921112,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testenv_setup_teardown",
    "time" : {
      "start" : 1658621921113,
      "stop" : 1658621921365,
      "duration" : 252
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster_manager",
    "time" : {
      "start" : 1658624603836,
      "stop" : 1658624603836,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "cd_testfile_temp_dir::0",
    "time" : {
      "start" : 1658624604499,
      "stop" : 1658624604499,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "close_dbconn::0",
    "time" : {
      "start" : 1658627216308,
      "stop" : 1658627216308,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testenv_setup_teardown::0",
    "time" : {
      "start" : 1658627216303,
      "stop" : 1658627216306,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster_manager::0",
    "time" : {
      "start" : 1658624604246,
      "stop" : 1658624604499,
      "duration" : 253
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "testnets"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.skipif(False, reason='meant to run with default era or higher, where cluster era == Tx era')"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "cardano_node_tests.tests"
  }, {
    "name" : "suite",
    "value" : "test_protocol"
  }, {
    "name" : "subSuite",
    "value" : "TestProtocol"
  }, {
    "name" : "host",
    "value" : "bender-3900x"
  }, {
    "name" : "thread",
    "value" : "35713-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cardano_node_tests.tests.test_protocol"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "https://github.com/input-output-hk/cardano-node-tests/blob/ed48848e8881877ef3425b7a9c3fa5bb9fb2ced8/cardano_node_tests/tests/test_protocol.py#L69",
    "url" : "https://github.com/input-output-hk/cardano-node-tests/blob/ed48848e8881877ef3425b7a9c3fa5bb9fb2ced8/cardano_node_tests/tests/test_protocol.py#L69",
    "type" : "link"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "77cadb0a47e874f8",
      "status" : "skipped",
      "statusDetails" : "Skipped: collected, not run",
      "time" : {
        "start" : 1658621917168,
        "stop" : 1658621917168,
        "duration" : 0
      }
    } ],
    "categories" : [ ],
    "tags" : [ "smoke", "testnets", "@pytest.mark.skipif(False, reason='meant to run with default era or higher, where cluster era == Tx era')" ]
  },
  "source" : "8a58c8caf8318f73.json",
  "parameterValues" : [ ]
}