{
  "uid" : "67b53bedbf9377e1",
  "name" : "test_collateral_with_tokens",
  "fullName" : "cardano_node_tests.tests.test_plutus_v2_spend_build.TestCollateralOutput#test_collateral_with_tokens",
  "historyId" : "fe873c24777652fed166a59f05fa1080",
  "time" : {
    "start" : 1658756812669,
    "stop" : 1658756822293,
    "duration" : 9624
  },
  "description" : "Test failing script using collaterals with tokens.\n\n        * create the token\n        * fund the script address and create a UTxO for collateral\n        * spend the locked UTxO\n        * check that the expected amount of collateral was spent\n        ",
  "descriptionHtml" : "<p>Test failing script using collaterals with tokens.</p>\n<pre><code>    * create the token\n    * fund the script address and create a UTxO for collateral\n    * spend the locked UTxO\n    * check that the expected amount of collateral was spent\n</code></pre>\n",
  "status" : "skipped",
  "statusMessage" : "XFAIL reason: See cardano-node issue #4013\n\n_pytest.outcomes.XFailed: See cardano-node issue #4013",
  "statusTrace" : "self = <cardano_node_tests.tests.test_plutus_v2_spend_build.TestCollateralOutput object at 0x7fb707932f80>, cluster = <ClusterLib: protocol=cardano, tx_era=babbage>\npayment_addrs = [AddressRecord(address='addr_test1vrvtxegwul06d6ylpudv3ftjclw4xcw3fq2czpsk8uygymqykng5k', vkey_file=PosixPath('test_co..._tokens_ci0_dcc_payment_addr_1.vkey'), skey_file=PosixPath('test_collateral_with_tokens_ci0_dcc_payment_addr_1.skey'))]\n\n    @allure.link(helpers.get_vcs_link())\n    def test_collateral_with_tokens(\n        self, cluster: clusterlib.ClusterLib, payment_addrs: List[clusterlib.AddressRecord]\n    ):\n        \"\"\"Test failing script using collaterals with tokens.\n    \n        * create the token\n        * fund the script address and create a UTxO for collateral\n        * spend the locked UTxO\n        * check that the expected amount of collateral was spent\n        \"\"\"\n        temp_template = common.get_test_id(cluster)\n        payment_addr = payment_addrs[0]\n        dst_addr = payment_addrs[1]\n    \n        plutus_op = PLUTUS_OP_ALWAYS_FAILS\n    \n        # for mypy\n        assert plutus_op.execution_cost\n        assert plutus_op.datum_file\n        assert plutus_op.redeemer_cbor_file\n    \n        redeem_cost = plutus_common.compute_cost(\n            execution_cost=plutus_op.execution_cost, protocol_params=cluster.get_protocol_params()\n        )\n    \n        token_amount = 100\n        amount_for_collateral = redeem_cost.collateral * 4\n        return_collateral_amount = amount_for_collateral - redeem_cost.collateral\n    \n        # create the token\n        token_rand = clusterlib.get_rand_str(5)\n        token = clusterlib_utils.new_tokens(\n            *[f\"qacoin{token_rand}\".encode(\"utf-8\").hex()],\n            cluster_obj=cluster,\n            temp_template=f\"{temp_template}_{token_rand}\",\n            token_mint_addr=payment_addr,\n            issuer_addr=payment_addr,\n            amount=token_amount,\n        )\n        tokens_rec = [plutus_common.Token(coin=token[0].token, amount=token[0].amount)]\n    \n        # fund the script address and create a UTxO for collateral\n    \n        script_utxos, collateral_utxos, *__ = _build_fund_script(\n            temp_template=temp_template,\n            cluster=cluster,\n            payment_addr=payment_addr,\n            dst_addr=dst_addr,\n            plutus_op=plutus_op,\n            collateral_amount=amount_for_collateral,\n            tokens_collateral=tokens_rec,\n        )\n    \n        #  spend the \"locked\" UTxO\n    \n        txouts_return_collateral = [\n            clusterlib.TxOut(\n                address=dst_addr.address,\n                amount=return_collateral_amount,\n            ),\n            clusterlib.TxOut(\n                address=dst_addr.address, amount=token_amount, coin=tokens_rec[0].coin\n            ),\n        ]\n    \n>       tx_output_redeem = self._build_spend_locked_txin(\n            temp_template=temp_template,\n            cluster=cluster,\n            payment_addr=payment_addr,\n            dst_addr=dst_addr,\n            script_utxos=script_utxos,\n            collateral_utxos=collateral_utxos,\n            plutus_op=plutus_op,\n            total_collateral_amount=redeem_cost.collateral,\n            return_collateral_txouts=txouts_return_collateral,\n        )\n\n/home/martink/Source/repos/cardano-node-tests2/cardano_node_tests/tests/test_plutus_v2_spend_build.py:2304: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <cardano_node_tests.tests.test_plutus_v2_spend_build.TestCollateralOutput object at 0x7fb707932f80>, temp_template = 'test_collateral_with_tokens_ci0_mqx'\ncluster = <ClusterLib: protocol=cardano, tx_era=babbage>\npayment_addr = AddressRecord(address='addr_test1vrvtxegwul06d6ylpudv3ftjclw4xcw3fq2czpsk8uygymqykng5k', vkey_file=PosixPath('test_col...h_tokens_ci0_dcc_payment_addr_0.vkey'), skey_file=PosixPath('test_collateral_with_tokens_ci0_dcc_payment_addr_0.skey'))\ndst_addr = AddressRecord(address='addr_test1vzh4rxqfjfjct89h2jqjlx9486rkkjmwf03t5tdvs049s7c9yz5k6', vkey_file=PosixPath('test_col...h_tokens_ci0_dcc_payment_addr_1.vkey'), skey_file=PosixPath('test_collateral_with_tokens_ci0_dcc_payment_addr_1.skey'))\nscript_utxos = [UTXOData(utxo_hash='c6fe632e484dab723a2b6f28868fe7086f83c4fe01b66d1a7df7b02afed14211', utxo_ix=1, amount=200000000, a...h='9e1199a988ba72ffd6e9c269cadb3b53b5f360ff99f112d9b2ee30c4d74ad88b', inline_datum={'int': 42}, reference_script=None)]\ncollateral_utxos = [UTXOData(utxo_hash='c6fe632e484dab723a2b6f28868fe7086f83c4fe01b66d1a7df7b02afed14211', utxo_ix=2, amount=100, address...5k6', coin='lovelace', decoded_coin='', datum_hash='', inline_datum_hash='', inline_datum=None, reference_script=None)]\nplutus_op = PlutusOp(script_file=PosixPath('/home/martink/Source/repos/cardano-node-tests2/cardano_node_tests/tests/data/plutus/v2.../42.redeemer.cbor'), redeemer_value=None, execution_cost=ExecutionCost(per_time=230100, per_space=1100, fixed_cost=81))\ntotal_collateral_amount = 2000000\nreturn_collateral_txouts = [TxOut(address='addr_test1vzh4rxqfjfjct89h2jqjlx9486rkkjmwf03t5tdvs049s7c9yz5k6', amount=6000000, coin='lovelace', dat...atum_embed_value='', inline_datum_file='', inline_datum_cbor_file='', inline_datum_value='', reference_script_file='')]\n\n    def _build_spend_locked_txin(\n        self,\n        temp_template: str,\n        cluster: clusterlib.ClusterLib,\n        payment_addr: clusterlib.AddressRecord,\n        dst_addr: clusterlib.AddressRecord,\n        script_utxos: List[clusterlib.UTXOData],\n        collateral_utxos: List[clusterlib.UTXOData],\n        plutus_op: plutus_common.PlutusOp,\n        total_collateral_amount: Optional[int] = None,\n        return_collateral_txouts: clusterlib.OptionalTxOuts = (),\n    ) -> clusterlib.TxRawOutput:\n        # for mypy\n        assert plutus_op.execution_cost\n        assert plutus_op.redeemer_cbor_file\n    \n        plutus_txins = [\n            clusterlib.ScriptTxIn(\n                txins=script_utxos,\n                script_file=plutus_op.script_file,\n                collaterals=collateral_utxos,\n                execution_units=(\n                    plutus_op.execution_cost.per_time,\n                    plutus_op.execution_cost.per_space,\n                ),\n                redeemer_cbor_file=plutus_op.redeemer_cbor_file,\n                inline_datum_present=True,\n            )\n        ]\n    \n        tx_files_redeem = clusterlib.TxFiles(\n            signing_key_files=[dst_addr.skey_file],\n        )\n        txouts_redeem = [\n            clusterlib.TxOut(address=dst_addr.address, amount=2_000_000),\n        ]\n    \n        err_str = \"\"\n        try:\n            tx_output_redeem = cluster.build_tx(\n                src_address=payment_addr.address,\n                tx_name=f\"{temp_template}_step2\",\n                tx_files=tx_files_redeem,\n                txouts=txouts_redeem,\n                script_txins=plutus_txins,\n                return_collateral_txouts=return_collateral_txouts,\n                total_collateral_amount=total_collateral_amount,\n                change_address=payment_addr.address,\n                script_valid=False,\n            )\n        except clusterlib.CLIError as err:\n            err_str = str(err)\n    \n        # TODO: broken on node 1.35.0 and 1.35.1\n        if \"ScriptWitnessIndexTxIn 0 is missing from the execution units\" in err_str:\n>           pytest.xfail(\"See cardano-node issue #4013\")\nE           _pytest.outcomes.XFailed: See cardano-node issue #4013\n\n/home/martink/Source/repos/cardano-node-tests2/cardano_node_tests/tests/test_plutus_v2_spend_build.py:2133: XFailed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "payment_addrs",
    "time" : {
      "start" : 1658756810832,
      "stop" : 1658756812669,
      "duration" : 1837
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "function_autouse",
    "time" : {
      "start" : 1658756810531,
      "stop" : 1658756810531,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster",
    "time" : {
      "start" : 1658756810531,
      "stop" : 1658756810831,
      "duration" : 300
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "change_dir",
    "time" : {
      "start" : 1658753120503,
      "stop" : 1658753120504,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "session_autouse",
    "time" : {
      "start" : 1658753120856,
      "stop" : 1658753120856,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster_manager",
    "time" : {
      "start" : 1658756810531,
      "stop" : 1658756810531,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "worker_id",
    "time" : {
      "start" : 1658753120504,
      "stop" : 1658753120504,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testenv_setup_teardown",
    "time" : {
      "start" : 1658753120504,
      "stop" : 1658753120856,
      "duration" : 352
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "tmp_path_factory",
    "time" : {
      "start" : 1658753120503,
      "stop" : 1658753120503,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "close_dbconn",
    "time" : {
      "start" : 1658753120504,
      "stop" : 1658753120504,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cd_testfile_temp_dir",
    "time" : {
      "start" : 1658756810530,
      "stop" : 1658756810531,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testfile_temp_dir",
    "time" : {
      "start" : 1658756718090,
      "stop" : 1658756718090,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "cluster_manager::0",
    "time" : {
      "start" : 1658756822325,
      "stop" : 1658756822479,
      "duration" : 154
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testenv_setup_teardown::0",
    "time" : {
      "start" : 1658759510798,
      "stop" : 1658759510800,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "close_dbconn::0",
    "time" : {
      "start" : 1658759510820,
      "stop" : 1658759510823,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cd_testfile_temp_dir::0",
    "time" : {
      "start" : 1658756822479,
      "stop" : 1658756822479,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "testnets"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.skipif(False, reason='runs only with Babbage+ TX; needs PlutusV2 cost model')"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "cardano_node_tests.tests"
  }, {
    "name" : "suite",
    "value" : "test_plutus_v2_spend_build"
  }, {
    "name" : "subSuite",
    "value" : "TestCollateralOutput"
  }, {
    "name" : "host",
    "value" : "bender-3900x"
  }, {
    "name" : "thread",
    "value" : "1996002-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cardano_node_tests.tests.test_plutus_v2_spend_build"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "https://github.com/input-output-hk/cardano-node-tests/blob/ed48848e8881877ef3425b7a9c3fa5bb9fb2ced8/cardano_node_tests/tests/test_plutus_v2_spend_build.py#L2238",
    "url" : "https://github.com/input-output-hk/cardano-node-tests/blob/ed48848e8881877ef3425b7a9c3fa5bb9fb2ced8/cardano_node_tests/tests/test_plutus_v2_spend_build.py#L2238",
    "type" : "link"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "17fc44ff474c9c89",
      "status" : "skipped",
      "statusDetails" : "Skipped: collected, not run",
      "time" : {
        "start" : 1658753116590,
        "stop" : 1658753116590,
        "duration" : 0
      }
    } ],
    "categories" : [ ],
    "tags" : [ "@pytest.mark.skipif(False, reason='runs only with Babbage+ TX; needs PlutusV2 cost model')", "smoke", "testnets" ]
  },
  "source" : "67b53bedbf9377e1.json",
  "parameterValues" : [ ]
}