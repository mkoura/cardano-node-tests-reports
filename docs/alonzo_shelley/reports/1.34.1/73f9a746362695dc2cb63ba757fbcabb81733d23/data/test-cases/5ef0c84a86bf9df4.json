{
  "uid" : "5ef0c84a86bf9df4",
  "name" : "test_incremental_signing[witnessed-build_raw]",
  "fullName" : "cardano_node_tests.tests.test_scripts.TestIncrementalSigning#test_incremental_signing",
  "historyId" : "3ad61076c6d5e516d9838091660f702c",
  "time" : {
    "start" : 1646414083074,
    "stop" : 1646414087599,
    "duration" : 4525
  },
  "description" : "Send funds from script address using TX that is signed incrementally.\n\n        Test with Tx body created by both `transaction build` and `transaction build-raw`.\n        Test with Tx created by both `transaction sign` and `transaction assemble`.\n        ",
  "descriptionHtml" : "<p>Send funds from script address using TX that is signed incrementally.</p>\n<pre><code>    Test with Tx body created by both `transaction build` and `transaction build-raw`.\n    Test with Tx created by both `transaction sign` and `transaction assemble`.\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "cardano_clusterlib.clusterlib.CLIError: An error occurred running a CLI command `cardano-cli transaction build-raw --fee 0 --out-file test_incremental_signing_ci1_bdm_False_witnessed_from_estimate_tx.body --tx-in-script-file test_incremental_signing_ci1_bdm_False_witnessed_multisig.script --tx-in ad5f224cc8a00f2408b2598f14598bc31e1f6b8ec9acef9f2ff9da24e19d5c44#0 --tx-out addr_test1vpfuulpsp7sr22mxmtwnw8ylr5s3x9lnstp45ul0vk5a9fsyslm67+2000000 --tx-out addr_test1wr0x3gjcx7ekehq5d35hgny797d97xyswsyv0jx6vjnr9hgdmcstm+2500000 --metadata-json-file /home/martink/Source/repos/cardano-node-tests4/cardano_node_tests/tests/data/tx_metadata.json --metadata-cbor-file /home/martink/Source/repos/cardano-node-tests4/cardano_node_tests/tests/data/tx_metadata.cbor --invalid-hereafter 7330 --shelley-era` on path `/home/martink/Source/repos/cardano-node-tests4/tmp/pytest-of-martink/pytest-39/popen-gw10/test_scripts_py`: Command failed: transaction build-raw  Error: The script language SimpleScriptLanguage SimpleScriptV2 is not supported in the Shelley era.",
  "statusTrace" : "self = <cardano_node_tests.tests.test_scripts.TestIncrementalSigning object at 0x7f06c1934a30>, cluster = <ClusterLib: protocol=cardano, tx_era=shelley>\npayment_addrs = [AddressRecord(address='addr_test1vqe4lanjyrmwtvmfge4sxa6xjc47drhkj7fge52havtl0ac7vnhgr', vkey_file=PosixPath('multi_a...ey_file=PosixPath('multi_addr_inc_signing_ci1_5.vkey'), skey_file=PosixPath('multi_addr_inc_signing_ci1_5.skey')), ...], use_build_cmd = False\ntx_is = 'witnessed'\n\n    @allure.link(helpers.get_vcs_link())\n    @pytest.mark.parametrize(\n        \"use_build_cmd\",\n        (\n            False,\n            pytest.param(\n                True,\n                marks=pytest.mark.skipif(not common.BUILD_USABLE, reason=common.BUILD_SKIP_MSG),\n            ),\n        ),\n        ids=(\"build_raw\", \"build\"),\n    )\n    @pytest.mark.parametrize(\"tx_is\", (\"witnessed\", \"signed\"))\n    @pytest.mark.dbsync\n    def test_incremental_signing(\n        self,\n        cluster: clusterlib.ClusterLib,\n        payment_addrs: List[clusterlib.AddressRecord],\n        use_build_cmd: bool,\n        tx_is: str,\n    ):\n        \"\"\"Send funds from script address using TX that is signed incrementally.\n    \n        Test with Tx body created by both `transaction build` and `transaction build-raw`.\n        Test with Tx created by both `transaction sign` and `transaction assemble`.\n        \"\"\"\n        temp_template = f\"{common.get_test_id(cluster)}_{use_build_cmd}_{tx_is}\"\n        dst_addr = payment_addrs[1]\n        amount = 2000_000\n    \n        payment_vkey_files = [p.vkey_file for p in payment_addrs]\n        payment_skey_files = [p.skey_file for p in payment_addrs]\n    \n        before_slot = cluster.get_slot_no() + 10_000\n    \n        # create multisig script\n        multisig_script = cluster.build_multisig_script(\n            script_name=temp_template,\n            script_type_arg=clusterlib.MultiSigTypeArgs.ALL,\n            payment_vkey_files=payment_vkey_files,\n            slot=before_slot,\n            slot_type_arg=clusterlib.MultiSlotTypeArgs.BEFORE,\n        )\n    \n        # create script address\n        script_address = cluster.gen_script_addr(\n            addr_name=temp_template, script_file=multisig_script\n        )\n    \n        # send funds to script address\n        tx_out_to = multisig_tx(\n            cluster_obj=cluster,\n            temp_template=f\"{temp_template}_to\",\n            src_address=payment_addrs[0].address,\n            dst_address=script_address,\n            amount=4500_000,\n            payment_skey_files=[payment_skey_files[0]],\n            use_build_cmd=use_build_cmd,\n        )\n    \n        # record initial balances\n        src_init_balance = cluster.get_address_balance(script_address)\n        dst_init_balance = cluster.get_address_balance(dst_addr.address)\n    \n        # send funds from script address\n        destinations = [clusterlib.TxOut(address=dst_addr.address, amount=amount)]\n        tx_files = clusterlib.TxFiles(\n            metadata_json_files=[JSON_METADATA_FILE],\n            metadata_cbor_files=[CBOR_METADATA_FILE],\n            signing_key_files=payment_skey_files,\n        )\n        # empty `txins` means Tx inputs will be selected automatically by ClusterLib magic\n        script_txins = [clusterlib.ScriptTxIn(txins=[], script_file=multisig_script)]\n    \n        invalid_hereafter = cluster.get_slot_no() + 1000\n        if use_build_cmd:\n            tx_out_from = cluster.build_tx(\n                src_address=script_address,\n                tx_name=f\"{temp_template}_from\",\n                txouts=destinations,\n                script_txins=script_txins,\n                fee_buffer=2000_000,\n                tx_files=tx_files,\n                invalid_hereafter=invalid_hereafter,\n                invalid_before=100,\n                witness_override=len(payment_skey_files),\n            )\n        else:\n            ttl = cluster.calculate_tx_ttl()\n>           fee = cluster.calculate_tx_fee(\n                src_address=script_address,\n                tx_name=f\"{temp_template}_from\",\n                txouts=destinations,\n                script_txins=script_txins,\n                tx_files=tx_files,\n                ttl=ttl,\n                witness_count_add=len(payment_skey_files),\n            )\n\n/home/martink/Source/repos/cardano-node-tests4/cardano_node_tests/tests/test_scripts.py:1801: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/home/martink/Source/repos/cardano-clusterlib/cardano_clusterlib/clusterlib.py:2699: in calculate_tx_fee\n    tx_raw_output = self.build_raw_tx(\n/home/martink/Source/repos/cardano-clusterlib/cardano_clusterlib/clusterlib.py:2580: in build_raw_tx\n    tx_raw_output = self.build_raw_tx_bare(\n/home/martink/Source/repos/cardano-clusterlib/cardano_clusterlib/clusterlib.py:2456: in build_raw_tx_bare\n    self.cli(\n/home/martink/Source/repos/cardano-clusterlib/cardano_clusterlib/clusterlib.py:536: in cli\n    return self.cli_base(cmd)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <ClusterLib: protocol=cardano, tx_era=shelley>, cli_args = ['cardano-cli', 'transaction', 'build-raw', '--fee', '0', '--out-file', ...]\n\n    def cli_base(self, cli_args: List[str]) -> CLIOut:\n        \"\"\"Run a command.\n    \n        Args:\n            cli_args: A list consisting of command and it's arguments.\n    \n        Returns:\n            CLIOut: A tuple containing command stdout and stderr.\n        \"\"\"\n        cmd_str = \" \".join(cli_args)\n        LOGGER.debug(\"Running `%s`\", cmd_str)\n        self._write_cli_log(cmd_str)\n    \n        # re-run the command when running into\n        # Network.Socket.connect: <socket: X>: resource exhausted (Resource temporarily unavailable)\n        # or\n        # MuxError (MuxIOException writev: resource vanished (Broken pipe)) \"(sendAll errored)\"\n        for __ in range(3):\n            with subprocess.Popen(cli_args, stdout=subprocess.PIPE, stderr=subprocess.PIPE) as p:\n                stdout, stderr = p.communicate()\n    \n                if p.returncode == 0:\n                    break\n    \n            stderr_dec = stderr.decode()\n            err_msg = (\n                f\"An error occurred running a CLI command `{cmd_str}` on path \"\n                f\"`{Path.cwd()}`: {stderr_dec}\"\n            )\n            if \"resource exhausted\" in stderr_dec or \"resource vanished\" in stderr_dec:\n                LOGGER.error(err_msg)\n                time.sleep(0.4)\n                continue\n>           raise CLIError(err_msg)\nE           cardano_clusterlib.clusterlib.CLIError: An error occurred running a CLI command `cardano-cli transaction build-raw --fee 0 --out-file test_incremental_signing_ci1_bdm_False_witnessed_from_estimate_tx.body --tx-in-script-file test_incremental_signing_ci1_bdm_False_witnessed_multisig.script --tx-in ad5f224cc8a00f2408b2598f14598bc31e1f6b8ec9acef9f2ff9da24e19d5c44#0 --tx-out addr_test1vpfuulpsp7sr22mxmtwnw8ylr5s3x9lnstp45ul0vk5a9fsyslm67+2000000 --tx-out addr_test1wr0x3gjcx7ekehq5d35hgny797d97xyswsyv0jx6vjnr9hgdmcstm+2500000 --metadata-json-file /home/martink/Source/repos/cardano-node-tests4/cardano_node_tests/tests/data/tx_metadata.json --metadata-cbor-file /home/martink/Source/repos/cardano-node-tests4/cardano_node_tests/tests/data/tx_metadata.cbor --invalid-hereafter 7330 --shelley-era` on path `/home/martink/Source/repos/cardano-node-tests4/tmp/pytest-of-martink/pytest-39/popen-gw10/test_scripts_py`: Command failed: transaction build-raw  Error: The script language SimpleScriptLanguage SimpleScriptV2 is not supported in the Shelley era.\n\n/home/martink/Source/repos/cardano-clusterlib/cardano_clusterlib/clusterlib.py:519: CLIError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "close_dbconn",
    "time" : {
      "start" : 1646412636147,
      "stop" : 1646412636147,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "worker_id",
    "time" : {
      "start" : 1646412636147,
      "stop" : 1646412636147,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testenv_setup_teardown",
    "time" : {
      "start" : 1646412636147,
      "stop" : 1646412636148,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "payment_addrs",
    "time" : {
      "start" : 1646414071728,
      "stop" : 1646414083072,
      "duration" : 11344
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testfile_temp_dir",
    "time" : {
      "start" : 1646414044192,
      "stop" : 1646414044192,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster_manager",
    "time" : {
      "start" : 1646414071552,
      "stop" : 1646414071552,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "function_autouse",
    "time" : {
      "start" : 1646414071552,
      "stop" : 1646414071552,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cd_testfile_temp_dir",
    "time" : {
      "start" : 1646414071552,
      "stop" : 1646414071552,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "tmp_path_factory",
    "time" : {
      "start" : 1646412636147,
      "stop" : 1646412636147,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster",
    "time" : {
      "start" : 1646414071552,
      "stop" : 1646414071728,
      "duration" : 176
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "session_autouse",
    "time" : {
      "start" : 1646412636148,
      "stop" : 1646412636148,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "change_dir",
    "time" : {
      "start" : 1646412636147,
      "stop" : 1646412636147,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "close_dbconn::0",
    "time" : {
      "start" : 1646414323274,
      "stop" : 1646414323274,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "testenv_setup_teardown::0",
    "time" : {
      "start" : 1646414323267,
      "stop" : 1646414323270,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cluster_manager::0",
    "time" : {
      "start" : 1646414087756,
      "stop" : 1646414087759,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cd_testfile_temp_dir::0",
    "time" : {
      "start" : 1646414087759,
      "stop" : 1646414087759,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "testnets"
  }, {
    "name" : "tag",
    "value" : "dbsync"
  }, {
    "name" : "parentSuite",
    "value" : "cardano_node_tests.tests"
  }, {
    "name" : "suite",
    "value" : "test_scripts"
  }, {
    "name" : "subSuite",
    "value" : "TestIncrementalSigning"
  }, {
    "name" : "host",
    "value" : "bender-3900x"
  }, {
    "name" : "thread",
    "value" : "2401824-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cardano_node_tests.tests.test_scripts"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "tx_is",
    "value" : "'witnessed'"
  }, {
    "name" : "use_build_cmd",
    "value" : "False"
  } ],
  "links" : [ {
    "name" : "https://github.com/input-output-hk/cardano-node-tests/blob/edaeb38afe8445b93546d3d64261a0e26a613923/cardano_node_tests/tests/test_scripts.py#L1712",
    "url" : "https://github.com/input-output-hk/cardano-node-tests/blob/edaeb38afe8445b93546d3d64261a0e26a613923/cardano_node_tests/tests/test_scripts.py#L1712",
    "type" : "link"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "dbsync", "testnets" ]
  },
  "source" : "5ef0c84a86bf9df4.json",
  "parameterValues" : [ "'witnessed'", "False" ]
}