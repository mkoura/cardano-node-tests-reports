{
  "uid" : "d5cf375c6370c0f4",
  "name" : "test_lobster_name",
  "fullName" : "cardano_node_tests.tests.test_plutus_lobster.TestLobsterChallenge#test_lobster_name",
  "historyId" : "f33c663b51722375f3ab88a794f5d409",
  "time" : {
    "start" : 1656023701096,
    "stop" : 1656023701096,
    "duration" : 0
  },
  "description" : "Test the Lobster Challenge.\n\n        Uses `cardano-cli transaction build` command for building the transactions.\n\n        * fund token issuer and create a UTxO for collateral\n        * mint the LobsterNFT token\n        * deploy the LobsterNFT token to address of lobster spending script\n        * generate random votes and determine the expected final value\n        * perform voting and check that the final value matches the expected value\n        * (optional) check transactions in db-sync\n        ",
  "descriptionHtml" : "<p>Test the Lobster Challenge.</p>\n<pre><code>    Uses `cardano-cli transaction build` command for building the transactions.\n\n    * fund token issuer and create a UTxO for collateral\n    * mint the LobsterNFT token\n    * deploy the LobsterNFT token to address of lobster spending script\n    * generate random votes and determine the expected final value\n    * perform voting and check that the final value matches the expected value\n    * (optional) check transactions in db-sync\n</code></pre>\n",
  "status" : "skipped",
  "statusMessage" : "Skipped: cannot use `build` with cluster era 'babbage' and TX era 'mary'",
  "statusTrace" : "('/home/martink/Source/repos/cardano-node-tests5/cardano_node_tests/tests/test_plutus_lobster.py', 252, \"Skipped: cannot use `build` with cluster era 'babbage' and TX era 'mary'\")",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "testnets"
  }, {
    "name" : "tag",
    "value" : "dbsync"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.skip(reason='collected, not run')"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.skipif(True, reason='cannot use `build` with cluster era 'babbage' and TX era 'mary'')"
  }, {
    "name" : "parentSuite",
    "value" : "cardano_node_tests.tests"
  }, {
    "name" : "suite",
    "value" : "test_plutus_lobster"
  }, {
    "name" : "subSuite",
    "value" : "TestLobsterChallenge"
  }, {
    "name" : "host",
    "value" : "bender-3900x"
  }, {
    "name" : "thread",
    "value" : "3815951-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cardano_node_tests.tests.test_plutus_lobster"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "https://github.com/input-output-hk/cardano-node-tests/blob/7e8f2493831e226ba5602c41aa85fe5215c014d5/cardano_node_tests/tests/test_plutus_lobster.py#L252",
    "url" : "https://github.com/input-output-hk/cardano-node-tests/blob/7e8f2493831e226ba5602c41aa85fe5215c014d5/cardano_node_tests/tests/test_plutus_lobster.py#L252",
    "type" : "link"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "dbsync", "testnets", "@pytest.mark.skip(reason='collected, not run')", "@pytest.mark.skipif(True, reason='cannot use `build` with cluster era 'babbage' and TX era 'mary'')" ]
  },
  "source" : "d5cf375c6370c0f4.json",
  "parameterValues" : [ ]
}